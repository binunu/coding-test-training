# 연속된 수의 합
# 연속된 세 개의 정수를 더해 12가 되는 경우는 3, 4, 5입니다. 
# 두 정수 num과 total이 주어집니다. 
# 연속된 수 num개를 더한 값이 total이 될 때, 
# 정수 배열을 오름차순으로 담아 return하도록 solution함수를 완성해보세요.

def solution(num, total):
    answer = []
    mid = total//num
    start = 0
    if num%2==0 :
        start = mid - (num//2-1)
    else :
        start = mid - ((num-1)//2)
    return [x for x in range(start, start+num)]

# 직관적으로 생각했을 때, 
# 12를 연속된 세 개의 정수로 만든다고 하자.
# 가장 처음으로 생각해 볼 수 있는 것은 각 정수가 1/3씩의 값을 가지고 있는 것.
# 그렇다면 12를 1/3한 값인 4, 4, 4 에서 좌 우를 각각 -1, +1 시켜 345를 만든다이러면 연속된 수 이면서 더햇을 때 12를 만들 수 있다. 

# 이를 확장시켜 일단 1/n을 한 다음에, 홀수라면 남은 개수만큼
# 짝수라면 남은 개수 -1 만큼 좌 우로 퍼뜨리면 된다.

# 이를 수학적으로 풀이하면 다음과 같다.
# 연속된 수열은 항상 평균을 중심으로 대칭을 이루기 때문에 
# 기준값을 두고 좌우 대칭으로 퍼뜨려 배열을 만들면 되는 것. 

# 리팩토링
# num이 짝수인지 홀수인지에 상관 없이 일반식으로 표현이 가능하다.
# start = total-(num*(num-1)//2)//num